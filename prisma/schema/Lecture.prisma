model Lecture {
  id                  String               @id @default(nanoid(4))
  teacherId           String
  subjectId           String
  timetableId         String
  count               Int
  duration            Int
  createdAt           DateTime             @default(now())
  timetable           Timetable            @relation(fields: [timetableId], references: [id], onDelete: Cascade)
  teacher             Teacher              @relation(fields: [teacherId], references: [id], onDelete: Cascade)
  subject             Subject              @relation(fields: [subjectId], references: [id], onDelete: Cascade)
  lectureSubdivisions LectureSubdivision[]
  lectureClassrooms   LectureClassroom[]
  lectureSlots        LectureSlot[]
}

model LectureSubdivision {
  id            String      @id @default(nanoid(4))
  subdivisionId String
  lectureId     String
  subdivision   Subdivision @relation(fields: [subdivisionId], references: [id], onDelete: Cascade)
  lecture       Lecture     @relation(fields: [lectureId], references: [id], onDelete: Cascade)

  @@unique([lectureId, subdivisionId])
}

model LectureClassroom {
  id          String  @id @default(nanoid(4))
  classroomId String
  lectureId   String
  classroom   Classroom @relation(fields: [classroomId], references: [id], onDelete: Cascade)
  lecture     Lecture   @relation(fields: [lectureId], references: [id], onDelete: Cascade)

  @@unique([lectureId, classroomId])
}

model LectureSlot {
  id        String  @id @default(nanoid(4))
  slotId    String
  lectureId String
  isLocked  Boolean @default(false)
  slot      Slot    @relation(fields: [slotId], references: [id], onDelete: Cascade)
  lecture   Lecture @relation(fields: [lectureId], references: [id], onDelete: Cascade)

  @@unique([lectureId, slotId])
}
