/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TimetableIndexRouteImport } from './routes/timetable/index'
import { Route as DemoTrpcTodoRouteImport } from './routes/demo/trpc-todo'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo/tanstack-query'
import { Route as DemoMcpTodosRouteImport } from './routes/demo/mcp-todos'
import { Route as TtTimetableIdRouteRouteImport } from './routes/tt/$timetableId/route'
import { Route as TimetableTimetableIdRouteRouteImport } from './routes/timetable/$timetableId/route'
import { Route as TtTimetableIdIndexRouteImport } from './routes/tt/$timetableId/index'
import { Route as TimetableTimetableIdIndexRouteImport } from './routes/timetable/$timetableId/index'
import { Route as TtTimetableIdTimetablesRouteImport } from './routes/tt/$timetableId/timetables'
import { Route as TtTimetableIdTeachersRouteImport } from './routes/tt/$timetableId/teachers'
import { Route as TtTimetableIdSubjectsRouteImport } from './routes/tt/$timetableId/subjects'
import { Route as TtTimetableIdSubdivisionsRouteImport } from './routes/tt/$timetableId/subdivisions'
import { Route as TtTimetableIdLecturesRouteImport } from './routes/tt/$timetableId/lectures'
import { Route as TtTimetableIdClassroomsRouteImport } from './routes/tt/$timetableId/classrooms'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo/start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo/start.api-request'
import { Route as TtTimetableIdEditIndexRouteImport } from './routes/tt/$timetableId/edit/index'
import { ServerRoute as McpServerRouteImport } from './routes/mcp'
import { ServerRoute as ApiMcpTodosServerRouteImport } from './routes/api/mcp-todos'
import { ServerRoute as ApiDemoTqTodosServerRouteImport } from './routes/api/demo-tq-todos'
import { ServerRoute as ApiDemoNamesServerRouteImport } from './routes/api/demo-names'
import { ServerRoute as ApiTrpcSplatServerRouteImport } from './routes/api/trpc.$'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TimetableIndexRoute = TimetableIndexRouteImport.update({
  id: '/timetable/',
  path: '/timetable/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTrpcTodoRoute = DemoTrpcTodoRouteImport.update({
  id: '/demo/trpc-todo',
  path: '/demo/trpc-todo',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoMcpTodosRoute = DemoMcpTodosRouteImport.update({
  id: '/demo/mcp-todos',
  path: '/demo/mcp-todos',
  getParentRoute: () => rootRouteImport,
} as any)
const TtTimetableIdRouteRoute = TtTimetableIdRouteRouteImport.update({
  id: '/tt/$timetableId',
  path: '/tt/$timetableId',
  getParentRoute: () => rootRouteImport,
} as any)
const TimetableTimetableIdRouteRoute =
  TimetableTimetableIdRouteRouteImport.update({
    id: '/timetable/$timetableId',
    path: '/timetable/$timetableId',
    getParentRoute: () => rootRouteImport,
  } as any)
const TtTimetableIdIndexRoute = TtTimetableIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TtTimetableIdRouteRoute,
} as any)
const TimetableTimetableIdIndexRoute =
  TimetableTimetableIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => TimetableTimetableIdRouteRoute,
  } as any)
const TtTimetableIdTimetablesRoute = TtTimetableIdTimetablesRouteImport.update({
  id: '/timetables',
  path: '/timetables',
  getParentRoute: () => TtTimetableIdRouteRoute,
} as any)
const TtTimetableIdTeachersRoute = TtTimetableIdTeachersRouteImport.update({
  id: '/teachers',
  path: '/teachers',
  getParentRoute: () => TtTimetableIdRouteRoute,
} as any)
const TtTimetableIdSubjectsRoute = TtTimetableIdSubjectsRouteImport.update({
  id: '/subjects',
  path: '/subjects',
  getParentRoute: () => TtTimetableIdRouteRoute,
} as any)
const TtTimetableIdSubdivisionsRoute =
  TtTimetableIdSubdivisionsRouteImport.update({
    id: '/subdivisions',
    path: '/subdivisions',
    getParentRoute: () => TtTimetableIdRouteRoute,
  } as any)
const TtTimetableIdLecturesRoute = TtTimetableIdLecturesRouteImport.update({
  id: '/lectures',
  path: '/lectures',
  getParentRoute: () => TtTimetableIdRouteRoute,
} as any)
const TtTimetableIdClassroomsRoute = TtTimetableIdClassroomsRouteImport.update({
  id: '/classrooms',
  path: '/classrooms',
  getParentRoute: () => TtTimetableIdRouteRoute,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const TtTimetableIdEditIndexRoute = TtTimetableIdEditIndexRouteImport.update({
  id: '/edit/',
  path: '/edit/',
  getParentRoute: () => TtTimetableIdRouteRoute,
} as any)
const McpServerRoute = McpServerRouteImport.update({
  id: '/mcp',
  path: '/mcp',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiMcpTodosServerRoute = ApiMcpTodosServerRouteImport.update({
  id: '/api/mcp-todos',
  path: '/api/mcp-todos',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDemoTqTodosServerRoute = ApiDemoTqTodosServerRouteImport.update({
  id: '/api/demo-tq-todos',
  path: '/api/demo-tq-todos',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDemoNamesServerRoute = ApiDemoNamesServerRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiTrpcSplatServerRoute = ApiTrpcSplatServerRouteImport.update({
  id: '/api/trpc/$',
  path: '/api/trpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/timetable/$timetableId': typeof TimetableTimetableIdRouteRouteWithChildren
  '/tt/$timetableId': typeof TtTimetableIdRouteRouteWithChildren
  '/demo/mcp-todos': typeof DemoMcpTodosRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/demo/trpc-todo': typeof DemoTrpcTodoRoute
  '/timetable': typeof TimetableIndexRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/tt/$timetableId/classrooms': typeof TtTimetableIdClassroomsRoute
  '/tt/$timetableId/lectures': typeof TtTimetableIdLecturesRoute
  '/tt/$timetableId/subdivisions': typeof TtTimetableIdSubdivisionsRoute
  '/tt/$timetableId/subjects': typeof TtTimetableIdSubjectsRoute
  '/tt/$timetableId/teachers': typeof TtTimetableIdTeachersRoute
  '/tt/$timetableId/timetables': typeof TtTimetableIdTimetablesRoute
  '/timetable/$timetableId/': typeof TimetableTimetableIdIndexRoute
  '/tt/$timetableId/': typeof TtTimetableIdIndexRoute
  '/tt/$timetableId/edit': typeof TtTimetableIdEditIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/demo/mcp-todos': typeof DemoMcpTodosRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/demo/trpc-todo': typeof DemoTrpcTodoRoute
  '/timetable': typeof TimetableIndexRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/tt/$timetableId/classrooms': typeof TtTimetableIdClassroomsRoute
  '/tt/$timetableId/lectures': typeof TtTimetableIdLecturesRoute
  '/tt/$timetableId/subdivisions': typeof TtTimetableIdSubdivisionsRoute
  '/tt/$timetableId/subjects': typeof TtTimetableIdSubjectsRoute
  '/tt/$timetableId/teachers': typeof TtTimetableIdTeachersRoute
  '/tt/$timetableId/timetables': typeof TtTimetableIdTimetablesRoute
  '/timetable/$timetableId': typeof TimetableTimetableIdIndexRoute
  '/tt/$timetableId': typeof TtTimetableIdIndexRoute
  '/tt/$timetableId/edit': typeof TtTimetableIdEditIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/timetable/$timetableId': typeof TimetableTimetableIdRouteRouteWithChildren
  '/tt/$timetableId': typeof TtTimetableIdRouteRouteWithChildren
  '/demo/mcp-todos': typeof DemoMcpTodosRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/demo/trpc-todo': typeof DemoTrpcTodoRoute
  '/timetable/': typeof TimetableIndexRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/tt/$timetableId/classrooms': typeof TtTimetableIdClassroomsRoute
  '/tt/$timetableId/lectures': typeof TtTimetableIdLecturesRoute
  '/tt/$timetableId/subdivisions': typeof TtTimetableIdSubdivisionsRoute
  '/tt/$timetableId/subjects': typeof TtTimetableIdSubjectsRoute
  '/tt/$timetableId/teachers': typeof TtTimetableIdTeachersRoute
  '/tt/$timetableId/timetables': typeof TtTimetableIdTimetablesRoute
  '/timetable/$timetableId/': typeof TimetableTimetableIdIndexRoute
  '/tt/$timetableId/': typeof TtTimetableIdIndexRoute
  '/tt/$timetableId/edit/': typeof TtTimetableIdEditIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/timetable/$timetableId'
    | '/tt/$timetableId'
    | '/demo/mcp-todos'
    | '/demo/tanstack-query'
    | '/demo/trpc-todo'
    | '/timetable'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/tt/$timetableId/classrooms'
    | '/tt/$timetableId/lectures'
    | '/tt/$timetableId/subdivisions'
    | '/tt/$timetableId/subjects'
    | '/tt/$timetableId/teachers'
    | '/tt/$timetableId/timetables'
    | '/timetable/$timetableId/'
    | '/tt/$timetableId/'
    | '/tt/$timetableId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/demo/mcp-todos'
    | '/demo/tanstack-query'
    | '/demo/trpc-todo'
    | '/timetable'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/tt/$timetableId/classrooms'
    | '/tt/$timetableId/lectures'
    | '/tt/$timetableId/subdivisions'
    | '/tt/$timetableId/subjects'
    | '/tt/$timetableId/teachers'
    | '/tt/$timetableId/timetables'
    | '/timetable/$timetableId'
    | '/tt/$timetableId'
    | '/tt/$timetableId/edit'
  id:
    | '__root__'
    | '/'
    | '/timetable/$timetableId'
    | '/tt/$timetableId'
    | '/demo/mcp-todos'
    | '/demo/tanstack-query'
    | '/demo/trpc-todo'
    | '/timetable/'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/tt/$timetableId/classrooms'
    | '/tt/$timetableId/lectures'
    | '/tt/$timetableId/subdivisions'
    | '/tt/$timetableId/subjects'
    | '/tt/$timetableId/teachers'
    | '/tt/$timetableId/timetables'
    | '/timetable/$timetableId/'
    | '/tt/$timetableId/'
    | '/tt/$timetableId/edit/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TimetableTimetableIdRouteRoute: typeof TimetableTimetableIdRouteRouteWithChildren
  TtTimetableIdRouteRoute: typeof TtTimetableIdRouteRouteWithChildren
  DemoMcpTodosRoute: typeof DemoMcpTodosRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  DemoTrpcTodoRoute: typeof DemoTrpcTodoRoute
  TimetableIndexRoute: typeof TimetableIndexRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}
export interface FileServerRoutesByFullPath {
  '/mcp': typeof McpServerRoute
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
  '/api/mcp-todos': typeof ApiMcpTodosServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/mcp': typeof McpServerRoute
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
  '/api/mcp-todos': typeof ApiMcpTodosServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/mcp': typeof McpServerRoute
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
  '/api/mcp-todos': typeof ApiMcpTodosServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/mcp'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/mcp-todos'
    | '/api/trpc/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/mcp'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/mcp-todos'
    | '/api/trpc/$'
  id:
    | '__root__'
    | '/mcp'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/mcp-todos'
    | '/api/trpc/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  McpServerRoute: typeof McpServerRoute
  ApiDemoNamesServerRoute: typeof ApiDemoNamesServerRoute
  ApiDemoTqTodosServerRoute: typeof ApiDemoTqTodosServerRoute
  ApiMcpTodosServerRoute: typeof ApiMcpTodosServerRoute
  ApiTrpcSplatServerRoute: typeof ApiTrpcSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/timetable/': {
      id: '/timetable/'
      path: '/timetable'
      fullPath: '/timetable'
      preLoaderRoute: typeof TimetableIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/trpc-todo': {
      id: '/demo/trpc-todo'
      path: '/demo/trpc-todo'
      fullPath: '/demo/trpc-todo'
      preLoaderRoute: typeof DemoTrpcTodoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/mcp-todos': {
      id: '/demo/mcp-todos'
      path: '/demo/mcp-todos'
      fullPath: '/demo/mcp-todos'
      preLoaderRoute: typeof DemoMcpTodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tt/$timetableId': {
      id: '/tt/$timetableId'
      path: '/tt/$timetableId'
      fullPath: '/tt/$timetableId'
      preLoaderRoute: typeof TtTimetableIdRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/timetable/$timetableId': {
      id: '/timetable/$timetableId'
      path: '/timetable/$timetableId'
      fullPath: '/timetable/$timetableId'
      preLoaderRoute: typeof TimetableTimetableIdRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tt/$timetableId/': {
      id: '/tt/$timetableId/'
      path: '/'
      fullPath: '/tt/$timetableId/'
      preLoaderRoute: typeof TtTimetableIdIndexRouteImport
      parentRoute: typeof TtTimetableIdRouteRoute
    }
    '/timetable/$timetableId/': {
      id: '/timetable/$timetableId/'
      path: '/'
      fullPath: '/timetable/$timetableId/'
      preLoaderRoute: typeof TimetableTimetableIdIndexRouteImport
      parentRoute: typeof TimetableTimetableIdRouteRoute
    }
    '/tt/$timetableId/timetables': {
      id: '/tt/$timetableId/timetables'
      path: '/timetables'
      fullPath: '/tt/$timetableId/timetables'
      preLoaderRoute: typeof TtTimetableIdTimetablesRouteImport
      parentRoute: typeof TtTimetableIdRouteRoute
    }
    '/tt/$timetableId/teachers': {
      id: '/tt/$timetableId/teachers'
      path: '/teachers'
      fullPath: '/tt/$timetableId/teachers'
      preLoaderRoute: typeof TtTimetableIdTeachersRouteImport
      parentRoute: typeof TtTimetableIdRouteRoute
    }
    '/tt/$timetableId/subjects': {
      id: '/tt/$timetableId/subjects'
      path: '/subjects'
      fullPath: '/tt/$timetableId/subjects'
      preLoaderRoute: typeof TtTimetableIdSubjectsRouteImport
      parentRoute: typeof TtTimetableIdRouteRoute
    }
    '/tt/$timetableId/subdivisions': {
      id: '/tt/$timetableId/subdivisions'
      path: '/subdivisions'
      fullPath: '/tt/$timetableId/subdivisions'
      preLoaderRoute: typeof TtTimetableIdSubdivisionsRouteImport
      parentRoute: typeof TtTimetableIdRouteRoute
    }
    '/tt/$timetableId/lectures': {
      id: '/tt/$timetableId/lectures'
      path: '/lectures'
      fullPath: '/tt/$timetableId/lectures'
      preLoaderRoute: typeof TtTimetableIdLecturesRouteImport
      parentRoute: typeof TtTimetableIdRouteRoute
    }
    '/tt/$timetableId/classrooms': {
      id: '/tt/$timetableId/classrooms'
      path: '/classrooms'
      fullPath: '/tt/$timetableId/classrooms'
      preLoaderRoute: typeof TtTimetableIdClassroomsRouteImport
      parentRoute: typeof TtTimetableIdRouteRoute
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tt/$timetableId/edit/': {
      id: '/tt/$timetableId/edit/'
      path: '/edit'
      fullPath: '/tt/$timetableId/edit'
      preLoaderRoute: typeof TtTimetableIdEditIndexRouteImport
      parentRoute: typeof TtTimetableIdRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/mcp': {
      id: '/mcp'
      path: '/mcp'
      fullPath: '/mcp'
      preLoaderRoute: typeof McpServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/mcp-todos': {
      id: '/api/mcp-todos'
      path: '/api/mcp-todos'
      fullPath: '/api/mcp-todos'
      preLoaderRoute: typeof ApiMcpTodosServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/demo-tq-todos': {
      id: '/api/demo-tq-todos'
      path: '/api/demo-tq-todos'
      fullPath: '/api/demo-tq-todos'
      preLoaderRoute: typeof ApiDemoTqTodosServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/trpc/$': {
      id: '/api/trpc/$'
      path: '/api/trpc/$'
      fullPath: '/api/trpc/$'
      preLoaderRoute: typeof ApiTrpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface TimetableTimetableIdRouteRouteChildren {
  TimetableTimetableIdIndexRoute: typeof TimetableTimetableIdIndexRoute
}

const TimetableTimetableIdRouteRouteChildren: TimetableTimetableIdRouteRouteChildren =
  {
    TimetableTimetableIdIndexRoute: TimetableTimetableIdIndexRoute,
  }

const TimetableTimetableIdRouteRouteWithChildren =
  TimetableTimetableIdRouteRoute._addFileChildren(
    TimetableTimetableIdRouteRouteChildren,
  )

interface TtTimetableIdRouteRouteChildren {
  TtTimetableIdClassroomsRoute: typeof TtTimetableIdClassroomsRoute
  TtTimetableIdLecturesRoute: typeof TtTimetableIdLecturesRoute
  TtTimetableIdSubdivisionsRoute: typeof TtTimetableIdSubdivisionsRoute
  TtTimetableIdSubjectsRoute: typeof TtTimetableIdSubjectsRoute
  TtTimetableIdTeachersRoute: typeof TtTimetableIdTeachersRoute
  TtTimetableIdTimetablesRoute: typeof TtTimetableIdTimetablesRoute
  TtTimetableIdIndexRoute: typeof TtTimetableIdIndexRoute
  TtTimetableIdEditIndexRoute: typeof TtTimetableIdEditIndexRoute
}

const TtTimetableIdRouteRouteChildren: TtTimetableIdRouteRouteChildren = {
  TtTimetableIdClassroomsRoute: TtTimetableIdClassroomsRoute,
  TtTimetableIdLecturesRoute: TtTimetableIdLecturesRoute,
  TtTimetableIdSubdivisionsRoute: TtTimetableIdSubdivisionsRoute,
  TtTimetableIdSubjectsRoute: TtTimetableIdSubjectsRoute,
  TtTimetableIdTeachersRoute: TtTimetableIdTeachersRoute,
  TtTimetableIdTimetablesRoute: TtTimetableIdTimetablesRoute,
  TtTimetableIdIndexRoute: TtTimetableIdIndexRoute,
  TtTimetableIdEditIndexRoute: TtTimetableIdEditIndexRoute,
}

const TtTimetableIdRouteRouteWithChildren =
  TtTimetableIdRouteRoute._addFileChildren(TtTimetableIdRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TimetableTimetableIdRouteRoute: TimetableTimetableIdRouteRouteWithChildren,
  TtTimetableIdRouteRoute: TtTimetableIdRouteRouteWithChildren,
  DemoMcpTodosRoute: DemoMcpTodosRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  DemoTrpcTodoRoute: DemoTrpcTodoRoute,
  TimetableIndexRoute: TimetableIndexRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  McpServerRoute: McpServerRoute,
  ApiDemoNamesServerRoute: ApiDemoNamesServerRoute,
  ApiDemoTqTodosServerRoute: ApiDemoTqTodosServerRoute,
  ApiMcpTodosServerRoute: ApiMcpTodosServerRoute,
  ApiTrpcSplatServerRoute: ApiTrpcSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
